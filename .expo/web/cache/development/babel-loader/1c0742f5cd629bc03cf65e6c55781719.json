{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    SCREEN_HEIGHT = _Dimensions$get.height,\n    SCREEN_WIDTH = _Dimensions$get.width;\n\nfunction ImagePickerComponent(_ref) {\n  var onSubmit = _ref.onSubmit;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState('Please add an image'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      scanned = _useState6[0],\n      setScanned = _useState6[1];\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n        data = _ref2.data;\n    alert(\"Bar code with type \" + type + \" and data \" + data + \" has been scanned!\");\n  };\n\n  var pickImage = function _callee() {\n    var result, responseData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              base64: true\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (result.cancelled) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(onSubmit(result.base64).catch(function (error) {\n              console.log(\"Api call error\");\n            }));\n\n          case 6:\n            responseData = _context.sent;\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    children: _jsx(Pressable, {\n      style: [],\n      onPress: function onPress() {\n        return pickImage;\n      },\n      children: _jsx(Text, {\n        style: ({\n          color: 'black',\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }, {\n          borderRadius: 20,\n          padding: 10,\n          elevation: 2,\n          backgroundColor: '484848'\n        }),\n        children: \"\\uAC24\\uB7EC\\uB9AC\\uC5D0\\uC11C \\uBD88\\uB7EC\\uC624\\uAE30\"\n      })\n    })\n  });\n}\n\nexport default ImagePickerComponent;\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  modalView: {\n    flex: 0.5,\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 10,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: '#F194FF'\n  },\n  buttonClose: {\n    backgroundColor: '#2196F3'\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  settingText: {\n    flex: 1,\n    flexDirection: \"row\",\n    margin: 10,\n    fontSize: 20\n  },\n  topMenu: {\n    flex: 1.5,\n    flexDirection: \"row\",\n    backgroundColor: 'white',\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  logo: {\n    width: 100,\n    height: 50\n  },\n  cardSelect: {\n    flex: 1,\n    flexDirection: \"row\",\n    backgroundColor: 'white',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: SCREEN_WIDTH / 5\n  },\n  cardList: {\n    flex: 12,\n    backgroundColor: 'white'\n  },\n  card: {\n    marginBottom: -200,\n    height: SCREEN_HEIGHT / 4,\n    backgroundColor: 'white',\n    paddingVertical: 8,\n    borderWidth: 2,\n    borderColor: 'black',\n    borderRadius: 15,\n    margin: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 5,\n    elevation: 5\n  },\n  cardSelect_btn: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  cardSelect_txt: {\n    fontSize: 20\n  },\n  home_btn: {\n    flex: 3,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  add_btn: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  setting_btn: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"names":["ImagePicker","React","useState","useEffect","BarCodeScanner","Ionicons","Dimensions","get","SCREEN_HEIGHT","height","SCREEN_WIDTH","width","ImagePickerComponent","onSubmit","image","setImage","text","setText","scanned","setScanned","handleBarCodeScanned","type","data","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","base64","result","cancelled","catch","error","console","log","responseData","color","fontWeight","textAlign","borderRadius","padding","elevation","backgroundColor","styles","StyleSheet","create","main","flex","centeredView","justifyContent","alignItems","modalView","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","button","buttonOpen","buttonClose","textStyle","modalText","marginBottom","settingText","flexDirection","fontSize","topMenu","logo","cardSelect","paddingHorizontal","cardList","card","paddingVertical","borderWidth","borderColor","cardSelect_btn","cardSelect_txt","home_btn","add_btn","setting_btn"],"sources":["C:/Users/ES58/Documents/GitHub/2022HCI-giftyClip/ImagePickerComponent.js"],"sourcesContent":["import * as ImagePicker from 'expo-image-picker';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { StyleSheet,Pressable,TouchableOpacity,Button,Dimensions, Image, View, Text,Alert  } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\n\r\nimport { Ionicons } from '@expo/vector-icons'; \r\n\r\nconst {height:SCREEN_HEIGHT, width:SCREEN_WIDTH} = Dimensions.get('window');\r\n\r\nfunction ImagePickerComponent({ onSubmit }) {\r\n  const [image, setImage] = useState(null);\r\n  const [text, setText] = useState('Please add an image');\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    alert(`Bar code with type ${type} and data ${data} has been scanned!`);\r\n  };\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      base64: true, //return base64 data.\r\n      //this will allow the Vision API to read this image.\r\n    });\r\n    if (!result.cancelled) { //if the user submits an image,\r\n      const responseData = await onSubmit(result.base64).catch((error)=>{\r\n        console.log(\"Api call error\");\r\n        //alert(error.message);\r\n     });\r\n    }\r\n\r\n  };\r\n  return (\r\n    <View>\r\n        <Pressable\r\n                    style={[]}\r\n                    onPress={()=>pickImage }>\r\n                      <Text style={{\r\n                      color: 'black',\r\n                      fontWeight: 'bold',\r\n                      textAlign: 'center',\r\n                    },{\r\n                      borderRadius: 20,\r\n                      padding: 10,\r\n                      elevation: 2,\r\n                      backgroundColor: '484848',\r\n                    }}>갤러리에서 불러오기</Text>\r\n                  </Pressable>\r\n    </View>\r\n  );\r\n}\r\nexport default ImagePickerComponent;\r\n\r\nconst styles = StyleSheet.create({\r\n    main: {\r\n      flex:1,\r\n      backgroundColor: 'white',\r\n    },\r\n  \r\n    centeredView: {\r\n      flex: 1,\r\n      justifyContent: 'flex-end',\r\n      alignItems: 'center',\r\n    },\r\n    modalView: {\r\n      flex: 0.5,\r\n      margin: 20,\r\n      backgroundColor: 'white',\r\n      borderRadius: 10,\r\n      padding: 10,\r\n      alignItems: 'center',\r\n      shadowColor: '#000',\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2,\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 4,\r\n      elevation: 5,\r\n    },\r\n    button: {\r\n      borderRadius: 20,\r\n      padding: 10,\r\n      elevation: 2,\r\n    },\r\n    buttonOpen: {\r\n      backgroundColor: '#F194FF',\r\n    },\r\n    buttonClose: {\r\n      backgroundColor: '#2196F3',\r\n    },\r\n    textStyle: {\r\n      color: 'white',\r\n      fontWeight: 'bold',\r\n      textAlign: 'center',\r\n    },\r\n    modalText: {\r\n      marginBottom: 15,\r\n      textAlign: 'center',\r\n    },\r\n    settingText:{\r\n      flex:1,\r\n      flexDirection: \"row\",\r\n      margin:10,\r\n      fontSize:20,\r\n    },\r\n    topMenu : {\r\n      flex:1.5,\r\n      flexDirection : \"row\",\r\n      backgroundColor: 'white',\r\n      justifyContent :\"center\",\r\n      alignItems : \"center\", \r\n    },\r\n    logo: {\r\n      width: 100,\r\n      height: 50,\r\n    },\r\n    cardSelect : {\r\n      flex:1,\r\n      flexDirection : \"row\",\r\n      backgroundColor: 'white',\r\n      justifyContent :\"center\",\r\n      alignItems : \"center\", \r\n      paddingHorizontal: SCREEN_WIDTH/5,\r\n    },\r\n    cardList : {\r\n      flex:12,\r\n      backgroundColor: 'white',\r\n    },\r\n    card : {\r\n      marginBottom: -200,\r\n      height: SCREEN_HEIGHT/4,\r\n      backgroundColor: 'white',\r\n      paddingVertical: 8,\r\n      borderWidth: 2,\r\n      borderColor: 'black',\r\n      borderRadius: 15,\r\n      margin:15,\r\n      shadowColor: '#000',\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2,\r\n      },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 5,\r\n      elevation: 5,\r\n    },\r\n    cardSelect_btn: {\r\n      flex:1,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'white',\r\n    },\r\n    cardSelect_txt: {\r\n      fontSize : 20,\r\n    },\r\n    home_btn: {\r\n      flex:3,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'white',\r\n    },\r\n    add_btn: {\r\n      flex:1,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'white',\r\n    },\r\n    setting_btn: {\r\n      flex:1,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'white',\r\n    },\r\n  });"],"mappings":"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"},"metadata":{},"sourceType":"module"}