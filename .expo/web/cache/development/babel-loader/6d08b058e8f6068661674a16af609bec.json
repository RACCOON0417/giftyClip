{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    SCREEN_HEIGHT = _Dimensions$get.height,\n    SCREEN_WIDTH = _Dimensions$get.width;\n\nfunction ImagePickerComponent(_ref) {\n  var onSubmit = _ref.onSubmit;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState('Please add an image'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      scanned = _useState6[0],\n      setScanned = _useState6[1];\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n        data = _ref2.data;\n    alert(\"Bar code with type \" + type + \" and data \" + data + \" has been scanned!\");\n  };\n\n  var pickImage = function _callee() {\n    var result, responseData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"불러오기\");\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              base64: true\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (result.cancelled) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(onSubmit(result.base64).catch(function (error) {\n              console.log(\"Api call error\");\n            }));\n\n          case 7:\n            responseData = _context.sent;\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    children: _jsx(TouchableOpacity, {\n      style: [styles.button, styles.buttonClose, styles.rightView, styles.browseBtn],\n      onPress: pickImage,\n      children: _jsx(Text, {\n        style: styles.blacktext,\n        children: \"\\uAC24\\uB7EC\\uB9AC\\uC5D0\\uC11C \\uBD88\\uB7EC\\uC624\\uAE30\"\n      })\n    })\n  });\n}\n\nexport default ImagePickerComponent;\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  rightView: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    alignSelf: 'flex-end'\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: '#F194FF'\n  },\n  buttonClose: {\n    backgroundColor: '#2196F3'\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  browseBtn: {\n    borderRadius: 20,\n    padding: 20,\n    elevation: 2,\n    backgroundColor: '#DADADA',\n    borderWidth: 1,\n    Stroke: 'Solid #484848',\n    marginRight: '10%',\n    marginTop: '5%',\n    width: 200,\n    height: 40\n  },\n  blacktext: {\n    textsize: 16,\n    color: 'black',\n    fontWeight: 'bold',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["ImagePicker","React","useState","useEffect","BarCodeScanner","Ionicons","Dimensions","get","SCREEN_HEIGHT","height","SCREEN_WIDTH","width","ImagePickerComponent","onSubmit","image","setImage","text","setText","scanned","setScanned","handleBarCodeScanned","type","data","alert","pickImage","console","log","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","base64","result","cancelled","catch","error","responseData","styles","button","buttonClose","rightView","browseBtn","blacktext","StyleSheet","create","main","flex","backgroundColor","justifyContent","alignItems","alignSelf","centeredView","borderRadius","padding","elevation","buttonOpen","textStyle","color","fontWeight","textAlign","borderWidth","Stroke","marginRight","marginTop","textsize"],"sources":["C:/Users/ES58/Documents/GitHub/2022HCI-giftyClip/ImagePickerComponent.js"],"sourcesContent":["import * as ImagePicker from 'expo-image-picker';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { StyleSheet,Pressable,TouchableOpacity,Button,Dimensions, Image, View, Text,Alert  } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\n\r\nimport { Ionicons } from '@expo/vector-icons'; \r\n\r\nconst {height:SCREEN_HEIGHT, width:SCREEN_WIDTH} = Dimensions.get('window');\r\n\r\nfunction ImagePickerComponent({ onSubmit }) {\r\n  const [image, setImage] = useState(null);\r\n  const [text, setText] = useState('Please add an image');\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    alert(`Bar code with type ${type} and data ${data} has been scanned!`);\r\n  };\r\n\r\n  const pickImage = async () => {\r\n    console.log(\"불러오기\");\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      base64: true, //return base64 data.\r\n      //this will allow the Vision API to read this image.\r\n    });\r\n    if (!result.cancelled) { //if the user submits an image,\r\n      const responseData = await onSubmit(result.base64).catch((error)=>{\r\n        console.log(\"Api call error\");\r\n        //alert(error.message);\r\n     });\r\n    }\r\n\r\n  };\r\n  return (\r\n    <View>\r\n        <TouchableOpacity  style={[styles.button, styles.buttonClose, styles.rightView, styles.browseBtn]} onPress={pickImage}>\r\n          <Text style={styles.blacktext}>갤러리에서 불러오기</Text>\r\n        </TouchableOpacity >\r\n    </View>\r\n  );\r\n}\r\nexport default ImagePickerComponent;\r\n\r\nconst styles = StyleSheet.create({\r\n    main: {\r\n      flex:1,\r\n      backgroundColor: 'white',\r\n    },\r\n    rightView : {\r\n      flex: 1,\r\n      justifyContent: 'flex-end',\r\n      alignItems: 'flex-end',\r\n      alignSelf: 'flex-end',\r\n    },\r\n    centeredView: {\r\n      flex: 1,\r\n      justifyContent: 'flex-end',\r\n      alignItems: 'center',\r\n    },\r\n    button: {\r\n      borderRadius: 20,\r\n      padding: 10,\r\n      elevation: 2,\r\n    },\r\n    buttonOpen: {\r\n      backgroundColor: '#F194FF',\r\n    },\r\n    buttonClose: {\r\n      backgroundColor: '#2196F3',\r\n    },\r\n    textStyle: {\r\n      color: 'white',\r\n      fontWeight: 'bold',\r\n      textAlign: 'center',\r\n    },\r\n    browseBtn : {\r\n      borderRadius: 20,\r\n      padding: 20,\r\n      elevation: 2,\r\n      backgroundColor: '#DADADA',\r\n      borderWidth: 1,\r\n      Stroke:'Solid #484848',\r\n      marginRight : '10%',\r\n      marginTop : '5%',\r\n      width : 200,\r\n      height : 40\r\n    },\r\n    blacktext : {\r\n      textsize : 16,\r\n      color: 'black',\r\n      fontWeight: 'bold',\r\n      alignItems: 'center',\r\n    }\r\n  });"],"mappings":"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"},"metadata":{},"sourceType":"module"}