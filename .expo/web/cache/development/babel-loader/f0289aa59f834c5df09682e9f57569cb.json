{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Portal, FAB, Provider, Button } from 'react-native-paper';\nimport { NavigationContainer, useIsFocused, createStackNavigator } from '@react-navigation';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nfunction Home(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var isFocused = useIsFocused();\n\n  function _onStateChange(_ref) {\n    var open = _ref.open;\n    setOpen(open);\n\n    if (open) {\n      setTimeout(function () {\n        props.navigation.navigate('lol');\n      }, 3000);\n    }\n  }\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Home\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        props.navigation.navigate('lol');\n      },\n      children: \"Navigate\"\n    }), _jsx(Portal, {\n      children: _jsx(FAB.Group, {\n        open: isFocused && open,\n        icon: 'plus',\n        actions: [{\n          icon: 'add',\n          onPress: function onPress() {\n            return console.log('Pressed add');\n          }\n        }, {\n          icon: 'star',\n          label: 'Star',\n          onPress: function onPress() {\n            return console.log('Pressed star');\n          }\n        }, {\n          icon: 'email',\n          label: 'Email',\n          onPress: function onPress() {\n            return console.log('Pressed email');\n          }\n        }, {\n          icon: 'bell',\n          label: 'Remind',\n          onPress: function onPress() {\n            return console.log('Pressed notifications');\n          }\n        }],\n        onStateChange: _onStateChange,\n        visible: isFocused,\n        style: {\n          position: 'absolute',\n          right: 32,\n          bottom: 32\n        }\n      })\n    })]\n  });\n}\n\nfunction Lol() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Lol\"\n    })\n  });\n}\n\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Provider, {\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: \"home\",\n        children: [_jsx(Stack.Screen, {\n          name: \"home\",\n          component: Home\n        }), _jsx(Stack.Screen, {\n          name: \"lol\",\n          component: Lol\n        })]\n      })\n    })\n  });\n};\n\nexport default App;","map":{"version":3,"names":["React","Portal","FAB","Provider","Button","NavigationContainer","useIsFocused","createStackNavigator","Stack","Home","props","useState","open","setOpen","isFocused","_onStateChange","setTimeout","navigation","navigate","flex","justifyContent","alignItems","icon","onPress","console","log","label","position","right","bottom","Lol","App"],"sources":["C:/Users/ES58/Documents/GitHub/2022HCI-giftyClip/App.js"],"sourcesContent":["import * as React from 'react';\r\nimport { TouchableOpacity, Text, View, StyleSheet } from 'react-native';\r\nimport { Portal, FAB, Provider, Button } from 'react-native-paper';\r\n\r\nimport { NavigationContainer, useIsFocused,createStackNavigator } from '@react-navigation';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction Home(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  function _onStateChange({ open }) {\r\n    setOpen(open);\r\n\r\n    if (open) {\r\n      setTimeout(() => {\r\n        props.navigation.navigate('lol');\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Home</Text>\r\n      <Button\r\n        onPress={() => {\r\n          props.navigation.navigate('lol');\r\n        }}>\r\n        Navigate\r\n      </Button>\r\n      <Portal>\r\n        <FAB.Group\r\n          open={isFocused && open}\r\n          icon={'plus'}\r\n          actions={[\r\n            { icon: 'add', onPress: () => console.log('Pressed add') },\r\n            {\r\n              icon: 'star',\r\n              label: 'Star',\r\n              onPress: () => console.log('Pressed star'),\r\n            },\r\n            {\r\n              icon: 'email',\r\n              label: 'Email',\r\n              onPress: () => console.log('Pressed email'),\r\n            },\r\n            {\r\n              icon: 'bell',\r\n              label: 'Remind',\r\n              onPress: () => console.log('Pressed notifications'),\r\n            },\r\n          ]}\r\n          onStateChange={_onStateChange}\r\n          visible={isFocused}\r\n          style={{ position: 'absolute', right: 32, bottom: 32 }}\r\n        />\r\n      </Portal>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Lol() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Lol</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Provider>\r\n        <Stack.Navigator initialRouteName=\"home\">\r\n          <Stack.Screen name=\"home\" component={Home} />\r\n          <Stack.Screen name=\"lol\" component={Lol} />\r\n        </Stack.Navigator>\r\n      </Provider>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,QAAtB,EAAgCC,MAAhC,QAA8C,oBAA9C;AAEA,SAASC,mBAAT,EAA8BC,YAA9B,EAA2CC,oBAA3C,QAAuE,mBAAvE;;;AAEA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;;AAEA,SAASE,IAAT,CAAcC,KAAd,EAAqB;EACnB,sBAAwBV,KAAK,CAACW,QAAN,CAAe,IAAf,CAAxB;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAMC,SAAS,GAAGR,YAAY,EAA9B;;EAEA,SAASS,cAAT,OAAkC;IAAA,IAARH,IAAQ,QAARA,IAAQ;IAChCC,OAAO,CAACD,IAAD,CAAP;;IAEA,IAAIA,IAAJ,EAAU;MACRI,UAAU,CAAC,YAAM;QACfN,KAAK,CAACO,UAAN,CAAiBC,QAAjB,CAA0B,KAA1B;MACD,CAFS,EAEP,IAFO,CAAV;IAGD;EACF;;EAED,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAR;MAAWC,cAAc,EAAE,QAA3B;MAAqCC,UAAU,EAAE;IAAjD,CAAb;IAAA,WACE,KAAC,IAAD;MAAA;IAAA,EADF,EAEE,KAAC,MAAD;MACE,OAAO,EAAE,mBAAM;QACbX,KAAK,CAACO,UAAN,CAAiBC,QAAjB,CAA0B,KAA1B;MACD,CAHH;MAAA;IAAA,EAFF,EAQE,KAAC,MAAD;MAAA,UACE,KAAC,GAAD,CAAK,KAAL;QACE,IAAI,EAAEJ,SAAS,IAAIF,IADrB;QAEE,IAAI,EAAE,MAFR;QAGE,OAAO,EAAE,CACP;UAAEU,IAAI,EAAE,KAAR;UAAeC,OAAO,EAAE;YAAA,OAAMC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAN;UAAA;QAAxB,CADO,EAEP;UACEH,IAAI,EAAE,MADR;UAEEI,KAAK,EAAE,MAFT;UAGEH,OAAO,EAAE;YAAA,OAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;UAAA;QAHX,CAFO,EAOP;UACEH,IAAI,EAAE,OADR;UAEEI,KAAK,EAAE,OAFT;UAGEH,OAAO,EAAE;YAAA,OAAMC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAN;UAAA;QAHX,CAPO,EAYP;UACEH,IAAI,EAAE,MADR;UAEEI,KAAK,EAAE,QAFT;UAGEH,OAAO,EAAE;YAAA,OAAMC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAN;UAAA;QAHX,CAZO,CAHX;QAqBE,aAAa,EAAEV,cArBjB;QAsBE,OAAO,EAAED,SAtBX;QAuBE,KAAK,EAAE;UAAEa,QAAQ,EAAE,UAAZ;UAAwBC,KAAK,EAAE,EAA/B;UAAmCC,MAAM,EAAE;QAA3C;MAvBT;IADF,EARF;EAAA,EADF;AAsCD;;AAED,SAASC,GAAT,GAAe;EACb,OACE,KAAC,IAAD;IAAM,KAAK,EAAE;MAAEX,IAAI,EAAE,CAAR;MAAWC,cAAc,EAAE,QAA3B;MAAqCC,UAAU,EAAE;IAAjD,CAAb;IAAA,UACE,KAAC,IAAD;MAAA;IAAA;EADF,EADF;AAKD;;AAED,IAAMU,GAAG,GAAG,SAANA,GAAM,GAAM;EAChB,OACE,KAAC,mBAAD;IAAA,UACE,KAAC,QAAD;MAAA,UACE,MAAC,KAAD,CAAO,SAAP;QAAiB,gBAAgB,EAAC,MAAlC;QAAA,WACE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,MAAnB;UAA0B,SAAS,EAAEtB;QAArC,EADF,EAEE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,KAAnB;UAAyB,SAAS,EAAEqB;QAApC,EAFF;MAAA;IADF;EADF,EADF;AAUD,CAXD;;AAaA,eAAeC,GAAf"},"metadata":{},"sourceType":"module"}