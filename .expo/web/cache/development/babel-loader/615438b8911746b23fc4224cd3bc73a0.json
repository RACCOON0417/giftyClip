{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ImagePickerComponent(_ref) {\n  var onSubmit = _ref.onSubmit;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState('Please add an image'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var pickImage = function _callee() {\n    var result, googleText;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              base64: true\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (result.cancelled) {\n              _context.next = 9;\n              break;\n            }\n\n            setImage(result.uri);\n            setText(\"Loading..\");\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(onSubmit(result.base64));\n\n          case 8:\n            googleText = _context.sent;\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"Pick an image from camera roll\",\n      onPress: pickImage\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 200,\n        height: 200,\n        resizeMode: \"contain\"\n      }\n    })]\n  });\n}\n\nexport default ImagePickerComponent;","map":{"version":3,"names":["ImagePicker","React","useState","useEffect","ImagePickerComponent","onSubmit","image","setImage","text","setText","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","base64","result","cancelled","uri","googleText","width","height","resizeMode"],"sources":["C:/Users/ES58/Documents/GitHub/2022HCI-giftyClip/ImagePickerComponent.js"],"sourcesContent":["import * as ImagePicker from 'expo-image-picker';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Image, View, Text } from 'react-native';\r\n\r\nfunction ImagePickerComponent({ onSubmit }) {\r\n  const [image, setImage] = useState(null);\r\n  const [text, setText] = useState('Please add an image');\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      base64: true, //return base64 data.\r\n      //this will allow the Vision API to read this image.\r\n    });\r\n    if (!result.cancelled) { //if the user submits an image,\r\n      setImage(result.uri);\r\n      setText(\"Loading..\");\r\n      //run the onSubmit handler and pass in the image data. \r\n      const googleText = await onSubmit(result.base64);\r\n    }\r\n  };\r\n  return (\r\n    <View>\r\n      <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\r\n      {image && (\r\n        <Image\r\n          source={{ uri: image }}\r\n          style={{ width: 200, height: 200, resizeMode:\"contain\" }}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\nexport default ImagePickerComponent;"],"mappings":";;AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAGA,SAASC,oBAAT,OAA4C;EAAA,IAAZC,QAAY,QAAZA,QAAY;;EAC1C,gBAA0BH,QAAQ,CAAC,IAAD,CAAlC;EAAA;EAAA,IAAOI,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAwBL,QAAQ,CAAC,qBAAD,CAAhC;EAAA;EAAA,IAAOM,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAMC,SAAS,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACGV,WAAW,CAACW,uBAAZ,CAAoC;cACrDC,UAAU,EAAEZ,WAAW,CAACa,gBAAZ,CAA6BC,GADY;cAErDC,MAAM,EAAE;YAF6C,CAApC,CADH;;UAAA;YACZC,MADY;;YAAA,IAMXA,MAAM,CAACC,SANI;cAAA;cAAA;YAAA;;YAOdV,QAAQ,CAACS,MAAM,CAACE,GAAR,CAAR;YACAT,OAAO,CAAC,WAAD,CAAP;YARc;YAAA,iCAUWJ,QAAQ,CAACW,MAAM,CAACD,MAAR,CAVnB;;UAAA;YAURI,UAVQ;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlB;;EAaA,OACE,MAAC,IAAD;IAAA,WACE,KAAC,MAAD;MAAQ,KAAK,EAAC,gCAAd;MAA+C,OAAO,EAAET;IAAxD,EADF,EAEGJ,KAAK,IACJ,KAAC,KAAD;MACE,MAAM,EAAE;QAAEY,GAAG,EAAEZ;MAAP,CADV;MAEE,KAAK,EAAE;QAAEc,KAAK,EAAE,GAAT;QAAcC,MAAM,EAAE,GAAtB;QAA2BC,UAAU,EAAC;MAAtC;IAFT,EAHJ;EAAA,EADF;AAWD;;AACD,eAAelB,oBAAf"},"metadata":{},"sourceType":"module"}