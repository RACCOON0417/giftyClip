{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport { Ionicons } from '@expo/vector-icons';\nimport ImagePickerComponent from \"./ImagePickerComponent\";\nimport callGoogleVisionAsync from \"./helperFunctions.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    SCREEN_HEIGHT = _Dimensions$get.height,\n    SCREEN_WIDTH = _Dimensions$get.width;\n\nconsole.log(SCREEN_HEIGHT, SCREEN_WIDTH);\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    _classCallCheck(this, HomeScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _useState = useState(false),\n          _useState2 = _slicedToArray(_useState, 2),\n          modalVisible = _useState2[0],\n          setModalVisible = _useState2[1];\n\n      var _useState3 = useState(false),\n          _useState4 = _slicedToArray(_useState3, 2),\n          addCardVisible = _useState4[0],\n          setaddCardVisible = _useState4[1];\n\n      var _useState5 = useState(false),\n          _useState6 = _slicedToArray(_useState5, 2),\n          isEnabled = _useState6[0],\n          setIsEnabled = _useState6[1];\n\n      var toggleSwitch = function toggleSwitch() {\n        return setIsEnabled(function (previousState) {\n          return !previousState;\n        });\n      };\n\n      var _React$useState = React.useState('교환처를 입력하세요.'),\n          _React$useState2 = _slicedToArray(_React$useState, 2),\n          SHOP = _React$useState2[0],\n          onChangeSHOP = _React$useState2[1];\n\n      var _React$useState3 = React.useState('제품명을 입력하세요.'),\n          _React$useState4 = _slicedToArray(_React$useState3, 2),\n          Product = _React$useState4[0],\n          onChangeProduct = _React$useState4[1];\n\n      var _React$useState5 = React.useState('유효기간을 입력하세요.'),\n          _React$useState6 = _slicedToArray(_React$useState5, 2),\n          Date = _React$useState6[0],\n          onChangedate = _React$useState6[1];\n\n      var _React$useState7 = React.useState(false),\n          _React$useState8 = _slicedToArray(_React$useState7, 2),\n          Barcode = _React$useState8[0],\n          onChangeBarcode = _React$useState8[1];\n\n      return _jsxs(SafeAreaView, {\n        style: styles.main,\n        children: [_jsxs(View, {\n          style: styles.topMenu,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.home_btn,\n            children: _jsx(Image, {\n              style: styles.logo,\n              source: {\n                uri: 'https://cdn.discordapp.com/attachments/971817216905478205/971817234861293608/logo.png'\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              flex: 2\n            }\n          }), _jsxs(View, {\n            style: styles.setting_btn,\n            children: [_jsx(Modal, {\n              animationType: \"slide\",\n              transparent: true,\n              visible: addCardVisible,\n              onRequestClose: function onRequestClose() {\n                setaddCardVisible(!addCardVisible);\n              },\n              children: _jsx(View, {\n                style: styles.centeredView,\n                children: _jsxs(View, {\n                  style: styles.modalView,\n                  children: [_jsx(Text, {\n                    style: styles.modalText,\n                    children: \"Add COUPON\"\n                  }), _jsxs(View, {\n                    style: styles.settingText,\n                    children: [_jsx(Text, {\n                      style: styles.settingText,\n                      children: \"SHOP\"\n                    }), _jsx(TextInput, {\n                      style: styles.input,\n                      onChangeText: onChangeSHOP,\n                      value: SHOP\n                    })]\n                  }), _jsxs(View, {\n                    style: styles.settingText,\n                    children: [_jsx(Text, {\n                      style: styles.settingText,\n                      children: \"Product\"\n                    }), _jsx(TextInput, {\n                      style: styles.input,\n                      onChangeText: onChangeProduct,\n                      value: Product\n                    })]\n                  }), _jsxs(View, {\n                    style: styles.settingText,\n                    children: [_jsx(Text, {\n                      style: styles.settingText,\n                      children: \"Date\"\n                    }), _jsx(TextInput, {\n                      style: styles.input,\n                      onChangeText: onChangedate,\n                      value: Date\n                    })]\n                  }), _jsxs(View, {\n                    style: styles.settingText,\n                    children: [_jsx(Text, {\n                      style: styles.settingText,\n                      children: \"Barcode\"\n                    }), _jsx(TextInput, {\n                      style: styles.input,\n                      onChangeText: onChangeBarcode,\n                      value: Barcode,\n                      placeholder: \"\\uBC14\\uCF54\\uB4DC \\uC22B\\uC790\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n                      keyboardType: \"numeric\"\n                    })]\n                  }), _jsxs(View, {\n                    style: styles.settingText,\n                    children: [_jsx(Pressable, {\n                      style: [styles.button, styles.buttonClose],\n                      onPress: function onPress() {\n                        return getData(Barcode);\n                      },\n                      children: _jsx(Text, {\n                        style: styles.textStyle,\n                        children: \"\\uBD88\\uB7EC\\uC624\\uAE30\"\n                      })\n                    }), _jsx(Pressable, {\n                      style: [styles.button, styles.buttonClose],\n                      onPress: function onPress() {\n                        return storeData(makeCoupon(SHOP, Product, Date, Barcode), Barcode);\n                      },\n                      children: _jsx(Text, {\n                        style: styles.textStyle,\n                        children: \"Add\"\n                      })\n                    }), _jsx(Pressable, {\n                      style: [styles.button, styles.buttonClose],\n                      onPress: function onPress() {\n                        return setaddCardVisible(!addCardVisible);\n                      },\n                      children: _jsx(Text, {\n                        style: styles.textStyle,\n                        children: \"Close\"\n                      })\n                    })]\n                  }), _jsx(ImagePickerComponent, {\n                    onSubmit: callGoogleVisionAsync\n                  })]\n                })\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setaddCardVisible(true);\n              },\n              children: _jsx(Ionicons, {\n                name: \"add\",\n                size: 24,\n                color: \"black\"\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.setting_btn,\n            children: [_jsx(Modal, {\n              animationType: \"slide\",\n              transparent: true,\n              visible: modalVisible,\n              onRequestClose: function onRequestClose() {\n                setModalVisible(!modalVisible);\n              },\n              children: _jsx(View, {\n                style: styles.centeredView,\n                children: _jsxs(View, {\n                  style: styles.modalView,\n                  children: [_jsx(Text, {\n                    style: styles.modalText,\n                    children: \"SETTING\"\n                  }), _jsxs(View, {\n                    style: styles.settingText,\n                    children: [_jsx(Text, {\n                      style: styles.settingText,\n                      children: \"Alarm Setting\"\n                    }), _jsx(Switch, {\n                      onValueChange: toggleSwitch,\n                      value: isEnabled\n                    })]\n                  }), _jsx(Pressable, {\n                    style: [styles.button, styles.buttonClose],\n                    onPress: function onPress() {\n                      return setModalVisible(!modalVisible);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.textStyle,\n                      children: \"\\uD655\\uC778\"\n                    })\n                  })]\n                })\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setModalVisible(true);\n              },\n              children: _jsx(Ionicons, {\n                name: \"ios-settings-outline\",\n                size: 24,\n                color: \"black\"\n              })\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.cardSelect,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.cardSelect_btn,\n            children: _jsx(Text, {\n              style: styles.cardSelect_txt,\n              children: \"\\uC0AC\\uC6A9\\uAC00\\uB2A5\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.cardSelect_btn,\n            children: _jsx(Text, {\n              style: styles.cardSelect_txt,\n              children: \"\\uC0AC\\uC6A9\\uC644\\uB8CC\"\n            })\n          })]\n        }), _jsx(View, {\n          style: styles.cardList,\n          children: _jsxs(ScrollView, {\n            children: [_jsx(Pressable, {\n              style: function style(_ref) {\n                var pressed = _ref.pressed;\n                return [{\n                  marginBottom: pressed ? 0 : -180\n                }, styles.card];\n              }\n            }), _jsx(Pressable, {\n              style: function style(_ref2) {\n                var pressed = _ref2.pressed;\n                return [{\n                  marginBottom: pressed ? 0 : -180\n                }, styles.card];\n              }\n            }), _jsx(Pressable, {\n              style: function style(_ref3) {\n                var pressed = _ref3.pressed;\n                return [{\n                  marginBottom: pressed ? 0 : -180\n                }, styles.card];\n              }\n            }), _jsx(Pressable, {\n              style: function style(_ref4) {\n                var pressed = _ref4.pressed;\n                return [{\n                  marginBottom: pressed ? 0 : -180\n                }, styles.card];\n              }\n            }), _jsx(Pressable, {\n              style: function style(_ref5) {\n                var pressed = _ref5.pressed;\n                return [{\n                  marginBottom: pressed ? 0 : -180\n                }, styles.card];\n              },\n              children: _jsxs(View, {\n                style: styles.centeredView,\n                children: [_jsx(Text, {\n                  style: styles.cardText,\n                  children: \" GS25 \"\n                }), _jsx(Text, {\n                  style: styles.cardText,\n                  children: \" 1000\\uC6D0\\uAD8C \"\n                }), _jsx(Text, {\n                  style: styles.cardText,\n                  children: \" BARCODE \"\n                })]\n              })\n            })]\n          })\n        })]\n      });\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nexport { HomeScreen as default };\nvar AppNavigator = createStackNavigator({\n  Home: HomeScreen,\n  Details: DetailsScreen\n}, {\n  initialRouteName: 'Home'\n});\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  modalView: {\n    flex: 0.5,\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 10,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 15,\n    padding: 10,\n    elevation: 2,\n    margin: 10\n  },\n  buttonOpen: {\n    backgroundColor: '#F194FF'\n  },\n  buttonClose: {\n    backgroundColor: '#2196F3'\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    fontSize: 25,\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  settingText: {\n    flex: 1,\n    fontSize: 8,\n    flexDirection: \"row\",\n    margin: 10,\n    fontSize: 20,\n    alignItems: 'center'\n  },\n  input: {\n    flex: 3,\n    height: 35,\n    margin: 12,\n    borderColor: '#9B9EA3',\n    borderWidth: 1,\n    padding: 10,\n    flexDirection: \"row\",\n    margin: 10,\n    fontSize: 20\n  },\n  topMenu: {\n    flex: 1.5,\n    flexDirection: \"row\",\n    backgroundColor: 'white',\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  logo: {\n    width: 100,\n    height: 50\n  },\n  cardSelect: {\n    flex: 1,\n    flexDirection: \"row\",\n    backgroundColor: 'white',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: SCREEN_WIDTH / 5\n  },\n  cardList: {\n    flex: 12,\n    backgroundColor: 'white'\n  },\n  card: {\n    marginBottom: -200,\n    height: SCREEN_HEIGHT / 4,\n    backgroundColor: 'white',\n    paddingVertical: 8,\n    borderWidth: 2,\n    borderColor: 'black',\n    borderRadius: 15,\n    margin: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 5,\n    elevation: 5\n  },\n  cardText: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    fontSize: 25\n  },\n  cardSelect_btn: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  cardSelect_txt: {\n    fontSize: 20\n  },\n  home_btn: {\n    flex: 3,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  add_btn: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  setting_btn: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  cardSelect_txt: {\n    fontSize: 20\n  },\n  home_btn: {\n    flex: 3,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  add_btn: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  setting_btn: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  }\n});\nvar coupon = new Object();\nvar coupon = {\n  shop: null,\n  product: null,\n  date: null,\n  barcode: null,\n  use: false\n};\n\nfunction makeCoupon(SHOP, Product, Date, Barcode) {\n  coupon.shop = SHOP;\n  coupon.product = Product;\n  coupon.date = Date;\n  coupon.barcode = Barcode;\n  coupon.use = false;\n  return coupon;\n}","map":{"version":3,"names":["React","useState","Ionicons","ImagePickerComponent","callGoogleVisionAsync","Dimensions","get","SCREEN_HEIGHT","height","SCREEN_WIDTH","width","console","log","HomeScreen","modalVisible","setModalVisible","addCardVisible","setaddCardVisible","isEnabled","setIsEnabled","toggleSwitch","previousState","SHOP","onChangeSHOP","Product","onChangeProduct","Date","onChangedate","Barcode","onChangeBarcode","styles","main","topMenu","home_btn","logo","uri","flex","setting_btn","centeredView","modalView","modalText","settingText","input","button","buttonClose","getData","textStyle","storeData","makeCoupon","cardSelect","cardSelect_btn","cardSelect_txt","cardList","pressed","marginBottom","card","cardText","Component","AppNavigator","createStackNavigator","Home","Details","DetailsScreen","initialRouteName","StyleSheet","create","backgroundColor","justifyContent","alignItems","margin","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","buttonOpen","color","fontWeight","textAlign","fontSize","flexDirection","borderColor","borderWidth","paddingHorizontal","paddingVertical","add_btn","coupon","Object","shop","product","date","barcode","use"],"sources":["C:/Users/ES58/Documents/GitHub/2022HCI-giftyClip/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, Dimensions, SafeAreaView, TouchableOpacity,Image, Alert, Modal, Pressable, Switch , TextInput , AppRegistry} from 'react-native';\r\n//import AsyncStorage from '@react-native-async-storage/async-storage';\r\n//import { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\r\nimport { Ionicons } from '@expo/vector-icons'; \r\n//import Barcode from 'react-barcode';\r\nimport ImagePickerComponent from \"./ImagePickerComponent\";\r\nimport callGoogleVisionAsync from \"./helperFunctions.js\";\r\n\r\nconst {height:SCREEN_HEIGHT, width:SCREEN_WIDTH} = Dimensions.get('window');\r\nconsole.log(SCREEN_HEIGHT,SCREEN_WIDTH)\r\n\r\nexport default class HomeScreen  extends React.Component  {\r\n  \r\n\r\n  /*\r\n  const getData = async (key) => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem(key)\r\n      console.log(jsonValue)\r\n      return jsonValue != null ? JSON.parse(jsonValue) : null;\r\n    } catch(e) {\r\n      // error reading value\r\n    }\r\n  }\r\n\r\n  const storeData = async (value, key) => {\r\n    try {\r\n      const jsonValue = JSON.stringify(value)\r\n      await AsyncStorage.setItem(key, jsonValue)\r\n      console.log(jsonValue, \"store\")\r\n      setaddCardVisible(!addCardVisible)\r\n    } catch (e) {\r\n      // saving error\r\n    }\r\n  }\r\n*/\r\n\r\n  // render(\r\n  //   var newCard = this.state.valueArray.map((item, key) => {})\r\n\r\n  // );\r\n\r\n\r\n  render(){\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [addCardVisible, setaddCardVisible] = useState(false);\r\n    const [isEnabled, setIsEnabled] = useState(false);\r\n    const toggleSwitch = () => setIsEnabled(previousState => !previousState);\r\n    const [SHOP, onChangeSHOP] = React.useState('교환처를 입력하세요.');\r\n    const [Product, onChangeProduct] = React.useState('제품명을 입력하세요.');\r\n    const [Date, onChangedate] = React.useState('유효기간을 입력하세요.');\r\n    const [Barcode, onChangeBarcode] = React.useState(false);\r\n  return (\r\n    <SafeAreaView style={styles.main}>\r\n      <View style={styles.topMenu}>\r\n        <TouchableOpacity style={styles.home_btn}>\r\n          <Image style={styles.logo} source={{uri: 'https://cdn.discordapp.com/attachments/971817216905478205/971817234861293608/logo.png',}}/>\r\n        </TouchableOpacity>\r\n\r\n        <View style={{flex:2}}></View>\r\n\r\n        <View style={styles.setting_btn}>\r\n          <Modal\r\n            animationType=\"slide\"\r\n            transparent={true}\r\n            visible={addCardVisible}\r\n            onRequestClose={() => {setaddCardVisible(!addCardVisible);}}>\r\n            <View style={styles.centeredView}>\r\n              <View style={styles.modalView}>\r\n                <Text style={styles.modalText}>Add COUPON</Text>\r\n                <View style={styles.settingText}>\r\n                  <Text style={styles.settingText}>SHOP</Text>\r\n                  <TextInput style={styles.input} onChangeText={onChangeSHOP} value={SHOP} />\r\n                </View>\r\n                <View style={styles.settingText}>\r\n                  <Text style={styles.settingText}>Product</Text>\r\n                  <TextInput style={styles.input} onChangeText={onChangeProduct} value={Product} />\r\n                </View>\r\n                <View style={styles.settingText}>\r\n                  <Text style={styles.settingText}>Date</Text>\r\n                  <TextInput style={styles.input} onChangeText={onChangedate} value={Date} />\r\n                </View>\r\n                <View style={styles.settingText}>\r\n                  <Text style={styles.settingText}>Barcode</Text>\r\n                  <TextInput style={styles.input} onChangeText={onChangeBarcode} value={Barcode} placeholder=\"바코드 숫자를 입력하세요\" keyboardType=\"numeric\"/>\r\n                </View>\r\n                <View style={styles.settingText}>\r\n                  <Pressable\r\n                    style={[styles.button, styles.buttonClose]}\r\n                    onPress={()=>getData(Barcode) }>\r\n                    <Text style={styles.textStyle}>불러오기</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={[styles.button, styles.buttonClose]}\r\n                    onPress={()=>storeData(makeCoupon(SHOP, Product, Date, Barcode), Barcode) }>\r\n                    <Text style={styles.textStyle}>Add</Text>\r\n                  </Pressable>\r\n                  <Pressable\r\n                    style={[styles.button, styles.buttonClose]}\r\n                    onPress={() => setaddCardVisible(!addCardVisible)}>\r\n                    <Text style={styles.textStyle}>Close</Text>\r\n                  </Pressable>\r\n                </View>\r\n                <ImagePickerComponent onSubmit={callGoogleVisionAsync} />\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n          <TouchableOpacity  onPress={() => setaddCardVisible(true)}>\r\n            <Ionicons name=\"add\" size={24} color=\"black\" /></TouchableOpacity>\r\n        </View>\r\n\r\n\r\n        <View style={styles.setting_btn}>\r\n          <Modal\r\n            animationType=\"slide\"\r\n            transparent={true}\r\n            visible={modalVisible}\r\n            onRequestClose={() => {setModalVisible(!modalVisible);}}>\r\n            <View style={styles.centeredView}>\r\n              <View style={styles.modalView}>\r\n                <Text style={styles.modalText}>SETTING</Text>\r\n                <View style={styles.settingText}>\r\n                <Text style={styles.settingText}>Alarm Setting</Text>\r\n            <Switch onValueChange={toggleSwitch} value={isEnabled}/>\r\n                </View>\r\n                <Pressable\r\n                  style={[styles.button, styles.buttonClose]}\r\n                  onPress={() => setModalVisible(!modalVisible)}>\r\n                  <Text style={styles.textStyle}>확인</Text>\r\n                </Pressable>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n          <TouchableOpacity  onPress={() => setModalVisible(true)}>\r\n            <Ionicons name=\"ios-settings-outline\" size={24} color=\"black\" /></TouchableOpacity>\r\n        </View>\r\n\r\n\r\n      </View>\r\n      <View style={styles.cardSelect}>\r\n        <TouchableOpacity style={styles.cardSelect_btn}><Text style={styles.cardSelect_txt}>사용가능</Text></TouchableOpacity>\r\n        <TouchableOpacity style={styles.cardSelect_btn}><Text style={styles.cardSelect_txt}>사용완료</Text></TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.cardList}>\r\n        <ScrollView>\r\n          <Pressable style={({ pressed }) => [{ marginBottom: pressed ? 0 : -180 }, styles.card ]}></Pressable>\r\n          <Pressable style={({ pressed }) => [{ marginBottom: pressed ? 0 : -180 }, styles.card ]}></Pressable>\r\n          <Pressable style={({ pressed }) => [{ marginBottom: pressed ? 0 : -180 }, styles.card ]}></Pressable>\r\n          <Pressable style={({ pressed }) => [{ marginBottom: pressed ? 0 : -180 }, styles.card ]}></Pressable>\r\n          <Pressable style={({ pressed }) => [{ marginBottom: pressed ? 0 : -180 }, styles.card ]}>\r\n            <View style={styles.centeredView}>\r\n              <Text style={styles.cardText}> GS25 </Text>\r\n              <Text style={styles.cardText}> 1000원권 </Text>\r\n              <Text style={styles.cardText}> BARCODE </Text>\r\n              {/* <Barcode value=\"barcode-example\" /> */}\r\n            </View>\r\n          </Pressable>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView> \r\n  );\r\n  }\r\n}\r\n\r\nconst AppNavigator = createStackNavigator(\r\n  {\r\n  Home: HomeScreen,\r\n  Details: DetailsScreen\r\n  },\r\n  {\r\n  initialRouteName: 'Home',\r\n  }\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  main: {\r\n    flex:1,\r\n    backgroundColor: 'white',\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n  modalView: {\r\n    flex: 0.5,\r\n    margin: 20,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    borderRadius: 15,\r\n    padding: 10,\r\n    elevation: 2,\r\n    margin:10\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: '#F194FF',\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: '#2196F3',\r\n  },\r\n  textStyle: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  modalText: {\r\n    fontSize: 25,\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n  },\r\n  settingText:{\r\n    flex:1,\r\n    fontSize: 8,\r\n    flexDirection: \"row\",\r\n    margin:10,\r\n    fontSize:20,\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    flex:3,\r\n    height: 35,\r\n    margin: 12,\r\n    borderColor: '#9B9EA3',\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    flexDirection: \"row\",\r\n    margin:10,\r\n    fontSize:20,\r\n  },\r\n    \r\n  topMenu : {\r\n    flex:1.5,\r\n    flexDirection : \"row\",\r\n    backgroundColor: 'white',\r\n    justifyContent :\"center\",\r\n    alignItems : \"center\", \r\n  },\r\n  logo: {\r\n    width: 100,\r\n    height: 50,\r\n  },\r\n  cardSelect : {\r\n    flex:1,\r\n    flexDirection : \"row\",\r\n    backgroundColor: 'white',\r\n    justifyContent :\"center\",\r\n    alignItems : \"center\", \r\n    paddingHorizontal: SCREEN_WIDTH/5,\r\n  },\r\n  cardList : {\r\n    flex:12,\r\n    backgroundColor: 'white',\r\n  },\r\n  card : {\r\n    // marginBottom: -200,\r\n    marginBottom: -200,\r\n    height: SCREEN_HEIGHT/4,\r\n    backgroundColor: 'white',\r\n    paddingVertical: 8,\r\n    borderWidth: 2,\r\n    borderColor: 'black',\r\n    borderRadius: 15,\r\n    margin:15,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 5,\r\n    elevation: 5,\r\n  },\r\n  cardText : {\r\n    flex:1,\r\n    flexDirection : \"row\",\r\n    alignItems : \"center\",\r\n    fontSize : 25,\r\n\r\n  },\r\n  cardSelect_btn: {\r\n    flex:1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  cardSelect_txt: {\r\n    fontSize : 20,\r\n  },\r\n  home_btn: {\r\n    flex:3,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  add_btn: {\r\n    flex:1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  setting_btn: {\r\n    flex:1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  cardSelect_txt: {\r\n    fontSize : 20,\r\n  },\r\n  home_btn: {\r\n    flex:3,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  add_btn: {\r\n    flex:1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  setting_btn: {\r\n    flex:1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n});\r\n\r\nvar coupon = new Object();\r\nvar coupon = {\r\n  shop : null,\r\n  product : null,\r\n  date : null,\r\n  barcode : null,\r\n  use : false,\r\n}\r\n\r\nfunction makeCoupon(SHOP, Product, Date, Barcode){\r\n  coupon.shop = SHOP;\r\n  coupon.product = Product;\r\n  coupon.date = Date;\r\n  coupon.barcode = Barcode;\r\n  coupon.use = false;\r\n  return coupon\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}