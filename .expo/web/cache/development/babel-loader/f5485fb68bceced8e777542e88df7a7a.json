{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport function readBarcode() {\n  var vision, client, fileName, _await$client$textDet, _await$client$textDet2, result, detections;\n\n  return _regeneratorRuntime.async(function readBarcode$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          vision = require('@google-cloud/vision');\n          client = new vision.ImageAnnotatorClient();\n          fileName = './assets/SampleBarcode.jpg';\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(client.textDetection(fileName));\n\n        case 5:\n          _await$client$textDet = _context.sent;\n          _await$client$textDet2 = _slicedToArray(_await$client$textDet, 1);\n          result = _await$client$textDet2[0];\n          detections = result.textAnnotations;\n          console.log('Text:');\n          detections.forEach(function (text) {\n            return console.log(text);\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexports.readBarcode = readBarcode;","map":{"version":3,"names":["readBarcode","vision","require","client","ImageAnnotatorClient","fileName","textDetection","result","detections","textAnnotations","console","log","forEach","text","exports"],"sources":["C:/Users/ES58/Documents/GitHub/2022HCI-giftyClip/ReadBarcode.js"],"sourcesContent":["export async function readBarcode() {\r\n    const vision = require('@google-cloud/vision');\r\n\r\n    // Creates a client\r\n    const client = new vision.ImageAnnotatorClient();\r\n\r\n    /**\r\n     * TODO(developer): Uncomment the following line before running the sample.\r\n     */\r\n    const fileName = './assets/SampleBarcode.jpg';\r\n\r\n    // Performs text detection on the local file\r\n    const [result] = await client.textDetection(fileName);\r\n    const detections = result.textAnnotations;\r\n    console.log('Text:');\r\n    detections.forEach(text => console.log(text));\r\n}\r\n\r\nexports.readBarcode=readBarcode;"],"mappings":";;AAAA,OAAO,SAAeA,WAAf;EAAA;;EAAA;IAAA;MAAA;QAAA;UACGC,MADH,GACYC,OAAO,CAAC,sBAAD,CADnB;UAIGC,MAJH,GAIY,IAAIF,MAAM,CAACG,oBAAX,EAJZ;UASGC,QATH,GASc,4BATd;UAAA;UAAA,iCAYoBF,MAAM,CAACG,aAAP,CAAqBD,QAArB,CAZpB;;QAAA;UAAA;UAAA;UAYIE,MAZJ;UAaGC,UAbH,GAagBD,MAAM,CAACE,eAbvB;UAcHC,OAAO,CAACC,GAAR,CAAY,OAAZ;UACAH,UAAU,CAACI,OAAX,CAAmB,UAAAC,IAAI;YAAA,OAAIH,OAAO,CAACC,GAAR,CAAYE,IAAZ,CAAJ;UAAA,CAAvB;;QAfG;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAkBPC,OAAO,CAACd,WAAR,GAAoBA,WAApB"},"metadata":{},"sourceType":"module"}